// Sum of Digits/Digital Root
// Digital root is the recursive sum of all the digits in a number.
// Given n, take the sum of the digits of n. If that value has more than one digit, 
// continue reducing in this way until a single-digit number is produced. The input will be a non-negative integer.
// Examples
//    16  -->  1 + 6 = 7
//   942  -->  9 + 4 + 2 = 15  -->  1 + 5 = 6
// 132189  -->  1 + 3 + 2 + 1 + 8 + 9 = 24  -->  2 + 4 = 6
// 493193  -->  4 + 9 + 3 + 1 + 9 + 3 = 29  -->  2 + 9 = 11  -->  1 + 1 = 2


package it.sumOfDigitRecursive;

import java.util.Scanner;

public class SumOfDigitRec {

	public static void main(String[] args) {
	
		Scanner input = new Scanner(System.in);
		int n;
		do {
			System.out.println("inserire un numero non negativo");
			n = input.nextInt();
		   } while (n < 0);
		int ris = sumOfDigit(n);
		System.out.println("La somma delle cifre Ã¨: " + ris);

	  }
	
	public static int sumOfDigit(int n) {
		int r;
		int s = 0;
		while (n >= 1) {
			r = n % 10;
			s = s + r;
			n = (n - r)/10;	
		}
		if (s > 9) return sumOfDigit(s);
		else return s;	
        }
}
